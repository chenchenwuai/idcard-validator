{"version":3,"file":"idcard-validator.umd.js","sources":["../src/utils.ts","../src/idcard.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nexport const isType = function (obj: any, type: string): boolean {\n\treturn Object.prototype.toString.call(obj) === '[object ' + type + ']'\n}\n\nexport const isObject = function (val: any): boolean {\n\treturn isType(val, 'Object')\n}\n\nexport const isString = function (val: string): boolean {\n\treturn isType(val, 'String')\n}\n\nexport const isFunction = function (val: any): boolean {\n\treturn isType(val, 'Function')\n}\n\nexport const isNumber = function (val: any): boolean {\n\treturn isType(val, 'Number')\n}\n\nexport const isLeapYear = function (year) {\n\treturn isNumber(year) && (year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0))\n}\n","// import { calculateArea, areaInfo } from './area'\nimport { isString, isLeapYear, isNumber } from './utils'\n\n/**\n * 18位身份证解析\n *\n * 1  至 6  位: [1-2]省份、[3-4]城市、[5-6]区县\n * 7  至 14 位: [7-10]年、[11-12]月、[13-14]日\n * 15 至 16 位: 当地派出所代码\n * 17       位: 性别,奇数男、偶数女\n * 18       位: 校检码,根据 numberRatio 和 codeMap 计算出来,可以是0~9或x\n */\n\nconst numberRatio = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2] // 身份证号码前17位数分别乘以不同的系数\nconst ratioValue = 11\nconst codeMap = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'] // 将这17位数字和系数相乘的结果相加,对ratioValue进行求余，得出身份证最后一个字符\nexport const idcardLength = 18\n\nexport const isValid = function (idcard: string): boolean {\n\tif (!isString(idcard) || !/^[0,9]{17}([0,9]|[x,X])$/.test(idcard)) {\n\t\treturn false\n\t}\n\tif (idcard.length !== idcardLength) {\n\t\treturn false\n\t}\n\n\tconst isValidCode = checkCode(idcard)\n\tif (!isValidCode) {\n\t\treturn false\n\t}\n\n\tconst birthday = calculateBirthday(idcard)\n\tif (birthday === false) {\n\t\treturn false\n\t}\n\n\t// 去掉省市区校验，打包代码太大\n\t// const areaCode = idcard.slice(0, 6)\n\t// const areaInfo = calculateArea(areaCode)\n\t// if (areaInfo === false) {\n\t// \treturn false\n\t// }\n\n\treturn true\n}\n\nexport const calculateIDCard = function (idcard: string): any | boolean {\n\tif (!isString(idcard) || !/^[0,9]{17}([0,9]|[x,X])$/.test(idcard)) {\n\t\treturn false\n\t}\n\tif (idcard.length !== idcardLength) {\n\t\treturn false\n\t}\n\n\tconst isValidCode = checkCode(idcard)\n\tif (!isValidCode) {\n\t\treturn false\n\t}\n\tconst code = idcard.substr(-1, 1)\n\n\tconst birthday = calculateBirthday(idcard)\n\tif (birthday === false) {\n\t\treturn false\n\t}\n\n\t// 去掉省市区数据，打包代码太大\n\t// const areaCode = idcard.slice(0, 6)\n\t// const areaInfo = calculateArea(areaCode)\n\t// if (areaInfo === false) {\n\t// \treturn false\n\t// }\n\n\tconst sexCode = idcard.substr(-2, 1)\n\tconst sex = (Number(sexCode) % 2) ? 1 : 2\n\n\treturn {\n\t\t...birthday,\n\t\t// ...areaInfo as areaInfo,\n\t\tcode,\n\t\tsex\n\t}\n}\n\n// 计算当前身份证号的校验码\nexport const calculateCode = function (idcard: string): string | boolean {\n\tif (!isString(idcard) || !/^[0,9]{17}/.test(idcard)) {\n\t\treturn false\n\t}\n\tconst head17Str = idcard.slice(0, 17)\n\tconst head17List = head17Str.split('')\n\tlet totalCount = 0\n\tfor (let index = 0; index < head17List.length; index++) {\n\t\ttotalCount += Number(head17List[index]) * numberRatio[index]\n\t}\n\tconst code = codeMap[totalCount % ratioValue]\n\treturn code.toUpperCase()\n}\n// 检查校验码时候正确\nconst checkCode = function (idcard: string): boolean {\n\tlet lastStr = idcard.slice(-1, 1)\n\tlastStr = lastStr.toUpperCase()\n\tconst code = calculateCode(idcard)\n\treturn code === lastStr\n}\n\n// 计算当前身份证生日数据\nconst calculateBirthday = function (idcard: string): any {\n\tif (!isString(idcard) || !/^[0,9]{14}/.test(idcard)) {\n\t\treturn false\n\t}\n\tconst birthday = idcard.substr(6, 8)\n\n\tconst y = birthday.slice(0, 4)\n\tconst m = birthday.slice(4, 6)\n\tconst d = birthday.slice(6, 8)\n\n\tconst year = Number(y)\n\tconst month = Number(m)\n\tconst date = Number(d)\n\tif (checkBirthday(year, month, date)) {\n\t\treturn {\n\t\t\tyear, month, date,\n\t\t\tbirthday: `${year}-${month}-${date}`\n\t\t}\n\t} else {\n\t\treturn false\n\t}\n}\n// 检查年月日是否正确\nconst checkBirthday = function (year: number, month: number, date: number): boolean {\n\tif (!isNumber(year) || isNumber(month) || isNumber(date)) {\n\t\treturn false\n\t}\n\tif (year > new Date().getFullYear()) {\n\t\treturn false\n\t}\n\tlet febDaysNum = 28\n\tif (isLeapYear(year)) {\n\t\tfebDaysNum = 29\n\t}\n\n\tswitch (month) {\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\treturn (date >= 1 && date <= 31)\n\t\t\tbreak\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\treturn (date >= 1 && date <= 30)\n\t\t\tbreak\n\t\tcase 2:\n\t\t\treturn (date >= 1 && date <= febDaysNum)\n\t\t\tbreak\n\t\tdefault:\n\t\t\treturn false\n\t}\n}\n"],"names":["isType","obj","type","Object","prototype","toString","call","isString","val","isNumber","isLeapYear","year","numberRatio","ratioValue","codeMap","idcardLength","isValid","idcard","test","length","isValidCode","checkCode","birthday","calculateBirthday","calculateIDCard","code","substr","sexCode","sex","Number","calculateCode","head17Str","slice","head17List","split","totalCount","index","toUpperCase","lastStr","y","m","d","month","date","checkBirthday","Date","getFullYear","febDaysNum"],"mappings":"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"}